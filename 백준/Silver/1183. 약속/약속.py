# 약속. 마법사 N명이 머글 문화를 이해하기 위해 머글과 약속을 잡았다. 각 마법사는 한 명의 머글을 만날 예정이다. 하지만, 마법사는 약속 시간보다 빨리 또는 늦게 도착할 수 있기 때문에 고민에 빠졌다.
# 결국 기다리는 시간을 최소화 하기 위해 모든 약속 시간을 T씩 미루려고 한다. 기다리는 시간은 먼저 도착한 사람이 늦게 도착한 사람이 도착할 때까지 기다리는 시간을 의미한다.
#
# 마법사의 약속 시간은 A1, A2, ..., AN이고, 도착 시간은 B1, B2, ..., BN이다. 약속 시간을 T만큼 미루면, 기다리는 시간의 합은 |Ai + T - Bi|의 합과 같다.
# 기다리는 시간의 합이 최소가 되는 서로 다른 정수 T의 개수를 구해보자.
#
# 입력
# 첫째 줄에 N이 주어진다. 다음 N개의 줄에 Ai, Bi가 주어진다.
#
# 출력
# 첫째 줄에 기다리는 시간의 합이 최소인 서로 다른 정수 T의 개수를 출력한다.

import sys
input = sys.stdin.readline

N = int(input())
num = []

for _ in range(N) :
    A, B = map(int, input().rstrip().split())
    num.append(A-B)

num.sort()

answer = 0
if len(num) % 2 == 0 : # 기다려야 하는 수가 짝수개라면
    idx = len(num) // 2 - 1 # 최소가 되는 범위를 구하면 됨
    answer = num[idx+1] - num[idx] + 1
else : # 기다려야 하는 수가 홀수개면 답은 무조건 1개
    answer = 1

print(answer)



