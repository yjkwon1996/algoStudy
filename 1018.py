# 1018 체스판 다시 칠하기
# https://www.acmicpc.net/problem/1018

"""
MN개 단위 정사각형으로 나누어져 있는 M X N 크기의 보드, 어떤 정사각형은 검은색, 나머지는 흰색으로 칠해져 있다.
이 보드를 잘라서 8X8 크기의 체스판으로 만들려고 한다.
체스판은 검은색과 흰색이 번갈아서 칠해져 있어야 한다. 각 칸이 검은색과 흰색 중 하나로 색칠되어 있고,
변을 공유하는 두 개의 사각형은 다른 색으로 칠해져 있어야 한다.
체스판을 색칠하는 경우는 두가지. 맨 왼쪽 위 칸이 흰색인 경우, 혹은 검은색인 경우
보드가 체스판처럼 칠해져 있다는 보장이 없어서 8X8 크기의 체스판으로 잘라낸 후에 몇 개의 정사각형을 다시 칠해야 한다.
이 때 다시 칠해야 하는 정사각형의 최소 개수를 구하는 프로그램을 작성
"""

# 첫째 줄에 N M 입력(8 <= N, M <= 50)인 자연수
# 둘째 줄부터 N개의 줄에 보드의 각 행의 상태가 주어짐.B는 검은색, W는 하얀색
# N행 M열
# 체스판의 시작이 흰색이거나 검은색. 두 경우를 생각
# 행과 열 인덱스의 합을 % 2 한다면 모든 보드의 값은 010101...값을 가지게 된다. 이 값으로 체스무늬를 만듬
# 모든 판에서 흰색 시작인 경우와 검은색 시작인 경우 두 경우를 계산한다

N, M = map(int, input().split())
board = [list(input()) for _ in range(N)]

min_arr = []
for i in range(N-7) :
    for j in range(M-7) :
        white = 0 # 흰색 시작일 때 다시 칠하는 개수
        black = 0 # 검은색 시작일 때 다시 칠하는 개수
        
        for k in range(i, i+8) : # 8X8 자르기
            for l in range(j, j+8) : # 8X8 자르기
                if (k+l) % 2 == 0 : # 행과 열 인덱스의 나머지.
                    if board[k][l] != 'W' : # W 시작
                        white += 1
                    if board[k][l] != 'B' : 
                        black += 1
                else :
                    if board[k][l] != 'B' : # B 시작
                        white += 1
                    if board[k][l] != 'W' : 
                        black += 1
        
        min_arr.append(min(white,black))
print(min(min_arr))        
