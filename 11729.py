# 11729 하노이 탑 이동 순서
# https://www.acmicpc.net/problem/11729

# 3개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여있다.
# 각 원판은 반경이 큰 순서대로 쌓여있다.
# 한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있고
# 쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다.
# 이 규칙대로 첫 번째 장대에서 세 번째 장대로 옮기려 할 때
# 이동 횟수를 최소로 한다면 이 작업을 수행할 때 필요한 이동 순서를 출력하는 프로그램

# 첫째 줄에 첫 번째 장대에 쌓인 원판의 개수 N이 주어진다.(입력)
# 첫째 줄에 옮긴 횟수 K를 출력
# 두 번째 줄부터 수행과정을 출력. 두 번째 줄부터 K개의 줄에 걸쳐 두 정수 A, B를 빈칸을 사이에 두고 출력
# A B -> A번째 탑의 가장 위에 있는 원판을 B번째 탑의 가장 위로 옮겼다는 의미

# 원반이 어떻게 이동되는지, 재귀를 이용한다면 간단하게 해결이 가능하다

# N개의 원반을 start 막대에서 end 장대로 이동
def hanoi(N, start, end) : 
    if N > 1 : # 원판 1개를 옮기는 경우 그냥 옮기면 된다.
        # 원반을 N-1개씩 나눠서 옮기면서 재귀로 반복
        hanoi(N-1, start, 6-start-end) # 장대는 총 3개. (1+2+3). start 장대와 end장대, 보조 장대(6-start-end) 이용
    
    print(start, end) # 일반적인 경우 마지막 A B를 출력

    if N > 1 :
        hanoi(N-1, 6-start-end, end)

N = int(input())

print(2**N-1)
hanoi(N, 1, 3) # N개의 원판을 장대 1번에서 3번으로 옮기겠다.