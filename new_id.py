import re
new_id = "...!@BaT#*..y.abcdefghijklm"
# new_id = "z-+.^."
# new_id = "=.="
# new_id = "123_.def"
# new_id = "abcdefghijklmn.p"
"""
규칙에 맞지 않는 아이디를 입력했을 때 입력된 아이디와 유사하면서 규칙에 맞는 아이디를 추천
규칙
길이는 3자 이상 ~ 15자 이하
알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.) 문자만 사용 가능
마침표는 처음과 끝에 사용 불가, 연속 사용 불가
new_id : 신규 유저가 입력한 아이디
1. 모든 대문자를 대응되는 소문자로 치환
2. 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.) 문자를 제외한 문자 제거
3. .이 2번 이상 연속된 부분을 하나의 .으로 치환
4. .이 처음이나 끝에 위치하면 제거
5. 빈 문자열이면 "a"를 대입
6. 길이가 16자 이상이면 0 ~ 15를 제외한 문자 모두 제거.
    제거 후 .이 끝에 위치한다면 .을 제거
7. 길이가 2자 이하라면 길이가 3자가 될 때까지 마지막 문자를 반복
"""
answer = ''

# 1번(대문자의 소문자 치환)
answer = new_id.lower()
# 2번(소문자(a-z), 숫자(\d), 빼기(\-), 밑줄(\_), 마침표(\.)를 제외([^])한 문자 제거)
answer = re.sub('[^a-z\d\-\_\.]', '', answer)
# 3번(마침표 2번 이상('\.\.+')을 하나로('.'))
answer = re.sub('\.\.+', '.', answer)
# 4번(.이 처음(^\.)이나 끝(\.$)에 위치하면 제거)
answer = re.sub('^\.|\.$', '', answer)
# 5번(빈 문자열이면 "a" 대입)
if answer == '' : answer = 'a'
# 6번(길이가 16자 이상이면 15 이후 제거, 마지막이 .이면(\.$) 제거)
answer = re.sub('\.$', '', answer[0:15])
# 7번(길이가 2자 이하라면 길이가 3이 될 때까지 반복해서 마지막 문자 추가)
while len(answer) < 3 : 
    answer += answer[-1:]
